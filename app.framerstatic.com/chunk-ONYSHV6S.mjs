import{t as T}from"https://app.framerstatic.com/chunk-IFLV2SXW.mjs";import{j as e}from"https://app.framerstatic.com/chunk-AHQIRSXG.mjs";var v;(t=>t.log=T("\u{1F4A9} fallback-logger-please-reassign:services"))(v||={});(a=>{a._isTesting=!1;let t;async function o(c,d){if(!a._isTesting)throw new Error("ServiceManager.isTesting must be true to use testWithShared()");if(t)throw new Error("ServiceManager.testWithShared() may not be nested");try{return t=c,await d()}finally{t=void 0}}a._testWithShared=o;function i(){if(a._isTesting){if(t)return t;throw new Error("ServiceManager.shared() may not be used while testing. Use testWithShared() for explicitness.")}}a._sharedServiceManagerIfTesting=i})(v||={});function x(n,t){throw t||new Error("Unexpected object: "+n)}var p=class extends Error{constructor(){super(...arguments);e(this,"name","ServiceError.UnknownError");e(this,"code",0);e(this,"status",0);e(this,"skipSentry",!1)}};(m=>{let n;(l=>(l[l.serviceNotFound=404]="serviceNotFound",l[l.serviceNotCompatible=426]="serviceNotCompatible",l[l.serviceGone=410]="serviceGone",l[l.implementation=500]="implementation",l[l.timedOut=504]="timedOut",l[l.badRequest=400]="badRequest",l[l.badResponse=422]="badResponse"))(n=m.Code||={});class t extends m{constructor(){super(...arguments);e(this,"code",404);e(this,"name","ServiceError.ServiceNotFound")}}m.ServiceNotFound=t;class o extends m{constructor(){super(...arguments);e(this,"code",426);e(this,"name","ServiceError.ServiceNotCompatible")}}m.ServiceNotCompatible=o;class i extends m{constructor(){super(...arguments);e(this,"code",410);e(this,"name","ServiceError.ServiceGone");e(this,"skipSentry",!0)}}m.ServiceGone=i;class a extends m{constructor(){super(...arguments);e(this,"code",500);e(this,"name","ServiceError.Implementation")}}m.Implementation=a;class c extends m{constructor(){super(...arguments);e(this,"code",504);e(this,"name","ServiceError.TimedOut")}}m.TimedOut=c;class d extends m{constructor(){super(...arguments);e(this,"code",400);e(this,"name","ServiceError.BadRequest")}}m.BadRequest=d;class S extends m{constructor(u,y){super(u);e(this,"code",422);e(this,"name","ServiceError.BadResponse");e(this,"response");this.response=y}}m.BadResponse=S;function g(r){if(!r)return new S;let s;E(r)&&(s=r.message);let u=P(r.code,s);return I(r)&&(u.code=r.code),k(r)&&(u.stack=r.stack),R(r)&&(u.skipSentry=r.skipSentry),N(r)&&(u.status=r.status),u}m.reconstructErrorResponse=g;function P(r,s){try{let u=r;switch(u){case 404:return new t(s);case 426:return new o(s);case 410:return new i(s);case 500:return new a(s);case 504:return new c(s);case 400:return new d(s);case 422:return new S(s);default:x(u)}}catch{return new m(s)}}function M(r){if(r instanceof m)return{code:r.code,message:r.message,stack:r.stack,skipSentry:r.skipSentry};let s,u,y,b,w;return typeof r=="string"?s=r:E(r)&&(s=r.message),k(r)&&(u=r.stack),R(r)&&(y=r.skipSentry),I(r)&&(b=r.code),N(r)&&(w=r.status),{code:b,message:s,stack:u,skipSentry:y,status:w}}m.toMessageBody=M})(p||={});function E(n){return typeof n=="object"&&n&&"message"in n&&typeof n.message=="string"}function k(n){return typeof n=="object"&&n&&"stack"in n&&typeof n.stack=="string"}function R(n){return typeof n=="object"&&n&&"skipSentry"in n&&typeof n.skipSentry=="boolean"}function I(n){return typeof n=="object"&&n&&"code"in n&&typeof n.code=="number"}function N(n){return typeof n=="object"&&n&&"status"in n&&typeof n.status=="number"}function O(n){v.log.error(n)}var f;(i=>{let n=Math.random;function t(){return`${n()}`}i.generateUniqueId=t;function o(){let a,c,d=new Promise((S,g)=>{a=S,c=g});return d.resolve=a,d.reject=c,d}i.newResolvablePromise=o})(f||={});var C=class{constructor(){e(this,"onNewStream");e(this,"newStream",t=>{let o=f.generateUniqueId();return new h((i,a)=>{this.iterators.push({id:o,update:i,done:a});let c=this.onNewStream?.(t);if(t?.replay==="latest"){let d=c?.latest??this.latestValue;if(d)i(d);else throw new p.Implementation('ServiceEventEmitter needs a "latest" value, but nothing has been emitted or returned by the onNewStream callback')}else if(c)throw new p.Implementation(`ServiceEventEmitter received a "latest" value from the onNewStream callback for a stream that didn't need it`)},()=>{let i=this.iterators.findIndex(a=>a.id===o);if(i>=0)this.iterators.splice(i,1);else throw new p.BadRequest(`ServiceEventEmitter couldn't find cancelled iterator with id: ${o}`)})});e(this,"iterators",[]);e(this,"latestValue");e(this,"emit",t=>{this.latestValue=t;for(let o of this.iterators)o.update(t)});e(this,"latest",()=>this.latestValue);e(this,"hasStreams",()=>this.iterators.length>0)}},h=class{constructor(t,o){this.onIteratorEnd=o;e(this,"log",v.log.extend("ServiceStreamIterator"));e(this,"hasAsyncIterator",!1);e(this,"updatesBeforeAsyncIterator",[]);e(this,"onUpdate");e(this,"doneResult",{done:!0,value:void 0});e(this,"promises",[]);e(this,"returnedNextPromise");e(this,"update",t=>{let{hasAsyncIterator:o,updatesBeforeAsyncIterator:i,promises:a,returnedNextPromise:c}=this;if(!o){if(!t||t instanceof p)throw new p.BadRequest("ServiceStream received return or throw before being read");i.push(t);return}let d=a[this.promises.length-1];if(t&&d===void 0){if(!c){this.log.warn("lastPromise and returnedNextPromise should never both be undefined");return}d=c}if(t===void 0)d?.resolve(this.doneResult),c?.resolve(this.doneResult);else if(t instanceof p)c?.reject(t);else{if(this.onUpdate?.(t).ignore)return;a.push(f.newResolvablePromise()),d?.resolve({done:!1,value:t})}});e(this,"next",async()=>{let t=this.promises.shift();return this.returnedNextPromise=t,t||this.doneResult});e(this,"return",async()=>(this.update(void 0),this.onIteratorEnd?.(),this.doneResult));e(this,"throw",async t=>(this.update(t),this.onIteratorEnd?.(),this.doneResult));e(this,"read",async t=>{let o=this[Symbol.asyncIterator](),i=await o.next();for(;!i.done;)t(i.value),i=await o.next()});e(this,"cancel",async()=>{await this.return()});this.promises=[f.newResolvablePromise()],t(this.update,this.update)}[Symbol.asyncIterator](t){if(this.hasAsyncIterator)throw new Error("ServiceStreamIterator.asyncIterator() may only be called once");return this.onUpdate=t,this.hasAsyncIterator=!0,this.updatesBeforeAsyncIterator.forEach(this.update),this.updatesBeforeAsyncIterator=[],this}};export{v as a,x as b,p as c,O as d,f as e,C as f};
//# sourceMappingURL=https://app.framerstatic.com/chunk-ONYSHV6S.mjs.map
