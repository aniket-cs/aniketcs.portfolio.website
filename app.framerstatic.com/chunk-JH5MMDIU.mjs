import{a as A}from"https://app.framerstatic.com/chunk-YE25YANI.mjs";import{b as l}from"https://app.framerstatic.com/chunk-3OXBJ3KU.mjs";import{a as v}from"https://app.framerstatic.com/chunk-7GSEC7H4.mjs";import{b as U,c as w}from"https://app.framerstatic.com/chunk-AQVHSVOY.mjs";import{d as u,e as R}from"https://app.framerstatic.com/chunk-5SGVO6J4.mjs";import{k as p,t as f}from"https://app.framerstatic.com/chunk-IFLV2SXW.mjs";import{a as h}from"https://app.framerstatic.com/chunk-WNSBRACC.mjs";async function P(o){try{let e=document.createElement("video");e.src=URL.createObjectURL(o),await new Promise(i=>{e.addEventListener("loadedmetadata",()=>{i()})});let{videoWidth:r,videoHeight:s}=e;return{width:r,height:s}}catch{return l({variant:"warning",icon:"warning",duration:5e3,text:`Could not get video dimensions for ${o.name}. Using defaults.`,type:"add"}),{width:300,height:300}}}var T=f("createService");function x(o){let e=i=>{throw Error("createService Promise not set up")},r=new Promise(i=>{e=n=>{i(n),e=t=>{T.warn("Services must only be initialized once, but createService resolve was called twice for promise",r)}}});return{service:new Proxy({},{get:(i,n)=>{let t=new Error("Waiting for service timed out");return(...a)=>{let m;return new Promise((d,c)=>{o!==void 0&&(m=window.setTimeout(()=>{c(t)},o*1e3)),r.then(y=>{window.clearTimeout(m),typeof y[n]=="function"?d(y[n](...a)):d(y[n])}).catch(c)})}}}),resolve:e}}var g=f("ChooseFileService");function I(o){return o.type==="image"}function j(o){return o.type==="video"}function F(o){let e=o.properties?.image?.width,r=o.properties?.image?.height;return h(e!==void 0&&r!==void 0,"Image asset missing width/height"),{naturalWidth:e,naturalHeight:r}}var S=class{constructor(e,r){this.api=e;this.assetService=r}async deleteAsset({key:e,refreshAssetService:r=!0}){await this.api.deleteAsset(e),r&&this.assetService.refresh().catch(p)}async uploadImage(e,{silent:r=!1,maxFileSize:s,onExceedsCustomMaxSize:i,refreshAssetService:n=!0}={}){try{let t=r?v:m=>l(m);if(!w.includes(e.type)){let m=e.type.split("/")[1];t({variant:"error",icon:"error",duration:1/0,text:`Unsupported image type. Expected one of ${U.join(", ")}, but got: ${m||""}`,type:"add"});return}let a=await this.api.uploadAsset(e,{maxFileSize:s,onExceedsCustomMaxSize:i,onToast:t});return a?(n&&await this.assetService.refresh().catch(p),{type:"image",asset:a,filename:a.filename,originalFilename:a.name,url:u(a.filename),imageSize:F(a)}):void 0}catch(t){if(r)throw t;l({variant:"error",icon:"error",duration:1/0,text:`Could not add image (it may be too large)${t&&t instanceof Error&&t.message?`: ${t.message}`:"."}`,type:"add"}),g.reportError(t,{fileName:e.name,fileSize:e.size,fileType:e.type})}}async uploadVideo(e,{silent:r=!1,maxFileSize:s,onExceedsCustomMaxSize:i,refreshAssetService:n=!0}={}){try{let t=r?v:c=>l(c),a=await Promise.all([z(P(e),1e4,"Measuring the video took more than 10 seconds"),this.api.uploadAsset(e,{maxFileSize:s,onExceedsCustomMaxSize:i,onToast:t})]);if(!a)return;let[m,d]=a;return d?(n&&await this.assetService.refresh().catch(p),{type:"video",asset:d,filename:d.filename,dimensions:m,originalFilename:d.name,url:u(d.filename)}):void 0}catch(t){if(r)throw t;l({variant:"error",icon:"error",duration:1/0,text:`Could not add video. ${t&&t instanceof Error&&t.message?`: ${t.message}`:"."}`,type:"add"}),g.reportError(t,{fileName:e.name,fileSize:e.size,fileType:e.type})}}async uploadAssetByURL(e,{silent:r=!1,refreshAssetService:s=!0}={}){let i=R(e),t=(i&&this.assetService.getAssetByFilename(i.filename))??await this.api.uploadAssetByURL(e,r?void 0:l),a={asset:t,filename:t.filename,originalFilename:t.name,url:u(t.filename)};return s&&await this.assetService.refresh().catch(p),t.mimeType.startsWith("image/")?{...a,type:"image",imageSize:F(t)}:{...a,type:"file"}}async uploadFile(e,{silent:r=!1,maxFileSize:s,onExceedsCustomMaxSize:i,refreshAssetService:n=!0}={}){let t=await this.api.uploadAsset(e,{maxFileSize:s,onExceedsCustomMaxSize:i,onToast:r?void 0:a=>l(a)});if(t)return n&&await this.assetService.refresh().catch(p),{type:"file",asset:t,filename:t.filename,originalFilename:t.name,url:u(t.filename)}}async uploadFonts(e,{refreshAssetService:r=!0}={}){let s=[];if(!e)return s;try{for(let i of e){let n=await A(i.content,i.originalFilename),t=await this.api.uploadAsset(n);!t||!t.properties||s.push({filename:t.filename,originalFontName:t.name,properties:t.properties.font})}r&&await this.assetService.refresh().catch(p)}catch(i){g.warn("Failed to add font:",i)}return s}async uploadImageByURL(e,{refreshAssetService:r=!0}={}){let s=[];if(!e)return s;try{let i=await this.uploadAssetByURL(e.url,{refreshAssetService:r});h(I(i)),s.push(i)}catch(i){g.warn("Failed to add image by URL:",i)}return s}},{service:D,resolve:b}=x();function H(o,e){b(new S(o,e))}function z(o,e,r="timed out"){return new Promise((s,i)=>{setTimeout(()=>{i(Error(r))},e),o.then(s,i)})}export{x as a,I as b,j as c,D as d,H as e};
//# sourceMappingURL=https://app.framerstatic.com/chunk-JH5MMDIU.mjs.map
